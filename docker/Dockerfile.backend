# Multi-stage build for backend
FROM node:18-alpine AS base
WORKDIR /app
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nodeuser

# Dependencies stage
FROM base AS deps
COPY package*.json ./
COPY packages/backend/package*.json ./packages/backend/
COPY packages/shared/package*.json ./packages/shared/
RUN npm ci --only=production

# Build stage
FROM base AS builder
COPY package*.json ./
COPY packages/backend/package*.json ./packages/backend/
COPY packages/shared/package*.json ./packages/shared/
RUN npm ci

COPY packages/shared ./packages/shared
COPY packages/backend ./packages/backend
COPY tsconfig.json ./

RUN npm run build -w shared
RUN npm run build -w backend

# Production stage
FROM base AS runner
ENV NODE_ENV=production

COPY --from=deps --chown=nodeuser:nodejs /app/node_modules ./node_modules
COPY --from=deps --chown=nodeuser:nodejs /app/packages/backend/node_modules ./packages/backend/node_modules
COPY --from=builder --chown=nodeuser:nodejs /app/packages/backend/dist ./packages/backend/dist
COPY --from=builder --chown=nodeuser:nodejs /app/packages/shared/dist ./packages/shared/dist

USER nodeuser

EXPOSE 3001

HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD node -e "require('http').get('http://localhost:3001/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"

CMD ["node", "packages/backend/dist/index.js"]