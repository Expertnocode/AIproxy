version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: aiproxy-postgres
    environment:
      POSTGRES_DB: aiproxy
      POSTGRES_USER: aiproxy
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-aiproxy123}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aiproxy"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - aiproxy-network

  backend:
    build:
      context: ..
      dockerfile: docker/Dockerfile.backend
    container_name: aiproxy-backend
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_URL: postgresql://aiproxy:${POSTGRES_PASSWORD:-aiproxy123}@postgres:5432/aiproxy
      JWT_SECRET: ${JWT_SECRET:-your-jwt-secret-change-in-production}
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - aiproxy-network

  proxy:
    build:
      context: ..
      dockerfile: docker/Dockerfile.proxy
    container_name: aiproxy-proxy
    environment:
      NODE_ENV: production
      PORT: 3000
      BACKEND_URL: http://backend:3001
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      CLAUDE_API_KEY: ${CLAUDE_API_KEY}
      GEMINI_API_KEY: ${GEMINI_API_KEY}
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - aiproxy-network

  frontend:
    build:
      context: ..
      dockerfile: docker/Dockerfile.frontend
    container_name: aiproxy-frontend
    environment:
      VITE_API_URL: http://localhost:3001
      VITE_PROXY_URL: http://localhost:3000
    ports:
      - "80:80"
    depends_on:
      - backend
      - proxy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - aiproxy-network

volumes:
  postgres_data:

networks:
  aiproxy-network:
    driver: bridge